// Code generated by protoc-gen-go. DO NOT EDIT.
// source: planet/planetpb/planet.proto

package planetpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// We can define our planet and all of its corresponding data here, we can split this up later if we want.
type Planet struct {
	PlanetId             string        `protobuf:"bytes,1,opt,name=planet_id,json=planetId,proto3" json:"planet_id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Orbitalinfo          *OrbitalInfo  `protobuf:"bytes,3,opt,name=orbitalinfo,proto3" json:"orbitalinfo,omitempty"`
	Physicalinfo         *PhysicalInfo `protobuf:"bytes,4,opt,name=physicalinfo,proto3" json:"physicalinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Planet) Reset()         { *m = Planet{} }
func (m *Planet) String() string { return proto.CompactTextString(m) }
func (*Planet) ProtoMessage()    {}
func (*Planet) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{0}
}

func (m *Planet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Planet.Unmarshal(m, b)
}
func (m *Planet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Planet.Marshal(b, m, deterministic)
}
func (m *Planet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Planet.Merge(m, src)
}
func (m *Planet) XXX_Size() int {
	return xxx_messageInfo_Planet.Size(m)
}
func (m *Planet) XXX_DiscardUnknown() {
	xxx_messageInfo_Planet.DiscardUnknown(m)
}

var xxx_messageInfo_Planet proto.InternalMessageInfo

func (m *Planet) GetPlanetId() string {
	if m != nil {
		return m.PlanetId
	}
	return ""
}

func (m *Planet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Planet) GetOrbitalinfo() *OrbitalInfo {
	if m != nil {
		return m.Orbitalinfo
	}
	return nil
}

func (m *Planet) GetPhysicalinfo() *PhysicalInfo {
	if m != nil {
		return m.Physicalinfo
	}
	return nil
}

type OrbitalInfo struct {
	Aphelion                 float32  `protobuf:"fixed32,1,opt,name=aphelion,proto3" json:"aphelion,omitempty"`
	Perihelion               float32  `protobuf:"fixed32,2,opt,name=perihelion,proto3" json:"perihelion,omitempty"`
	Semimajoraxis            float32  `protobuf:"fixed32,3,opt,name=semimajoraxis,proto3" json:"semimajoraxis,omitempty"`
	Eccentricity             float32  `protobuf:"fixed32,4,opt,name=Eccentricity,proto3" json:"Eccentricity,omitempty"`
	Orbitalperiod            float32  `protobuf:"fixed32,5,opt,name=orbitalperiod,proto3" json:"orbitalperiod,omitempty"`
	Synodicperiod            float32  `protobuf:"fixed32,6,opt,name=synodicperiod,proto3" json:"synodicperiod,omitempty"`
	Avgorbitalspeed          float32  `protobuf:"fixed32,7,opt,name=avgorbitalspeed,proto3" json:"avgorbitalspeed,omitempty"`
	Meananomaly              float32  `protobuf:"fixed32,8,opt,name=meananomaly,proto3" json:"meananomaly,omitempty"`
	Inclination              float32  `protobuf:"fixed32,9,opt,name=inclination,proto3" json:"inclination,omitempty"`
	Longitudeofascendingnode float32  `protobuf:"fixed32,10,opt,name=longitudeofascendingnode,proto3" json:"longitudeofascendingnode,omitempty"`
	Satelites                uint32   `protobuf:"varint,11,opt,name=satelites,proto3" json:"satelites,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *OrbitalInfo) Reset()         { *m = OrbitalInfo{} }
func (m *OrbitalInfo) String() string { return proto.CompactTextString(m) }
func (*OrbitalInfo) ProtoMessage()    {}
func (*OrbitalInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{1}
}

func (m *OrbitalInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrbitalInfo.Unmarshal(m, b)
}
func (m *OrbitalInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrbitalInfo.Marshal(b, m, deterministic)
}
func (m *OrbitalInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrbitalInfo.Merge(m, src)
}
func (m *OrbitalInfo) XXX_Size() int {
	return xxx_messageInfo_OrbitalInfo.Size(m)
}
func (m *OrbitalInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OrbitalInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OrbitalInfo proto.InternalMessageInfo

func (m *OrbitalInfo) GetAphelion() float32 {
	if m != nil {
		return m.Aphelion
	}
	return 0
}

func (m *OrbitalInfo) GetPerihelion() float32 {
	if m != nil {
		return m.Perihelion
	}
	return 0
}

func (m *OrbitalInfo) GetSemimajoraxis() float32 {
	if m != nil {
		return m.Semimajoraxis
	}
	return 0
}

func (m *OrbitalInfo) GetEccentricity() float32 {
	if m != nil {
		return m.Eccentricity
	}
	return 0
}

func (m *OrbitalInfo) GetOrbitalperiod() float32 {
	if m != nil {
		return m.Orbitalperiod
	}
	return 0
}

func (m *OrbitalInfo) GetSynodicperiod() float32 {
	if m != nil {
		return m.Synodicperiod
	}
	return 0
}

func (m *OrbitalInfo) GetAvgorbitalspeed() float32 {
	if m != nil {
		return m.Avgorbitalspeed
	}
	return 0
}

func (m *OrbitalInfo) GetMeananomaly() float32 {
	if m != nil {
		return m.Meananomaly
	}
	return 0
}

func (m *OrbitalInfo) GetInclination() float32 {
	if m != nil {
		return m.Inclination
	}
	return 0
}

func (m *OrbitalInfo) GetLongitudeofascendingnode() float32 {
	if m != nil {
		return m.Longitudeofascendingnode
	}
	return 0
}

func (m *OrbitalInfo) GetSatelites() uint32 {
	if m != nil {
		return m.Satelites
	}
	return 0
}

type PhysicalInfo struct {
	Meanradius                 string             `protobuf:"bytes,1,opt,name=meanradius,proto3" json:"meanradius,omitempty"`
	Equatorialradius           string             `protobuf:"bytes,2,opt,name=equatorialradius,proto3" json:"equatorialradius,omitempty"`
	Polarradius                string             `protobuf:"bytes,3,opt,name=polarradius,proto3" json:"polarradius,omitempty"`
	Flattening                 string             `protobuf:"bytes,4,opt,name=flattening,proto3" json:"flattening,omitempty"`
	Surfacearea                float32            `protobuf:"fixed32,5,opt,name=surfacearea,proto3" json:"surfacearea,omitempty"`
	Volume                     float32            `protobuf:"fixed32,6,opt,name=volume,proto3" json:"volume,omitempty"`
	Mass                       float64            `protobuf:"fixed64,7,opt,name=mass,proto3" json:"mass,omitempty"`
	Meandensity                float32            `protobuf:"fixed32,8,opt,name=meandensity,proto3" json:"meandensity,omitempty"`
	Surfacegravity             float32            `protobuf:"fixed32,9,opt,name=surfacegravity,proto3" json:"surfacegravity,omitempty"`
	Momentofintertiafactor     string             `protobuf:"bytes,10,opt,name=momentofintertiafactor,proto3" json:"momentofintertiafactor,omitempty"`
	Escapevelocity             float32            `protobuf:"fixed32,11,opt,name=escapevelocity,proto3" json:"escapevelocity,omitempty"`
	Siderealrotationperiod     float32            `protobuf:"fixed32,12,opt,name=siderealrotationperiod,proto3" json:"siderealrotationperiod,omitempty"`
	Equatorialrotationvelocity float32            `protobuf:"fixed32,13,opt,name=equatorialrotationvelocity,proto3" json:"equatorialrotationvelocity,omitempty"`
	Axialtilt                  float32            `protobuf:"fixed32,14,opt,name=axialtilt,proto3" json:"axialtilt,omitempty"`
	Northpolerightascension    float32            `protobuf:"fixed32,15,opt,name=northpolerightascension,proto3" json:"northpolerightascension,omitempty"`
	Northpoledeclination       float32            `protobuf:"fixed32,16,opt,name=northpoledeclination,proto3" json:"northpoledeclination,omitempty"`
	Albedo                     float32            `protobuf:"fixed32,17,opt,name=albedo,proto3" json:"albedo,omitempty"`
	Surfacetemp                *SurfaceTemp       `protobuf:"bytes,18,opt,name=surfacetemp,proto3" json:"surfacetemp,omitempty"`
	Apparentmagnitude          *ApparentMagnitude `protobuf:"bytes,19,opt,name=apparentmagnitude,proto3" json:"apparentmagnitude,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}           `json:"-"`
	XXX_unrecognized           []byte             `json:"-"`
	XXX_sizecache              int32              `json:"-"`
}

func (m *PhysicalInfo) Reset()         { *m = PhysicalInfo{} }
func (m *PhysicalInfo) String() string { return proto.CompactTextString(m) }
func (*PhysicalInfo) ProtoMessage()    {}
func (*PhysicalInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{2}
}

func (m *PhysicalInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhysicalInfo.Unmarshal(m, b)
}
func (m *PhysicalInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhysicalInfo.Marshal(b, m, deterministic)
}
func (m *PhysicalInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhysicalInfo.Merge(m, src)
}
func (m *PhysicalInfo) XXX_Size() int {
	return xxx_messageInfo_PhysicalInfo.Size(m)
}
func (m *PhysicalInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PhysicalInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PhysicalInfo proto.InternalMessageInfo

func (m *PhysicalInfo) GetMeanradius() string {
	if m != nil {
		return m.Meanradius
	}
	return ""
}

func (m *PhysicalInfo) GetEquatorialradius() string {
	if m != nil {
		return m.Equatorialradius
	}
	return ""
}

func (m *PhysicalInfo) GetPolarradius() string {
	if m != nil {
		return m.Polarradius
	}
	return ""
}

func (m *PhysicalInfo) GetFlattening() string {
	if m != nil {
		return m.Flattening
	}
	return ""
}

func (m *PhysicalInfo) GetSurfacearea() float32 {
	if m != nil {
		return m.Surfacearea
	}
	return 0
}

func (m *PhysicalInfo) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *PhysicalInfo) GetMass() float64 {
	if m != nil {
		return m.Mass
	}
	return 0
}

func (m *PhysicalInfo) GetMeandensity() float32 {
	if m != nil {
		return m.Meandensity
	}
	return 0
}

func (m *PhysicalInfo) GetSurfacegravity() float32 {
	if m != nil {
		return m.Surfacegravity
	}
	return 0
}

func (m *PhysicalInfo) GetMomentofintertiafactor() string {
	if m != nil {
		return m.Momentofintertiafactor
	}
	return ""
}

func (m *PhysicalInfo) GetEscapevelocity() float32 {
	if m != nil {
		return m.Escapevelocity
	}
	return 0
}

func (m *PhysicalInfo) GetSiderealrotationperiod() float32 {
	if m != nil {
		return m.Siderealrotationperiod
	}
	return 0
}

func (m *PhysicalInfo) GetEquatorialrotationvelocity() float32 {
	if m != nil {
		return m.Equatorialrotationvelocity
	}
	return 0
}

func (m *PhysicalInfo) GetAxialtilt() float32 {
	if m != nil {
		return m.Axialtilt
	}
	return 0
}

func (m *PhysicalInfo) GetNorthpolerightascension() float32 {
	if m != nil {
		return m.Northpolerightascension
	}
	return 0
}

func (m *PhysicalInfo) GetNorthpoledeclination() float32 {
	if m != nil {
		return m.Northpoledeclination
	}
	return 0
}

func (m *PhysicalInfo) GetAlbedo() float32 {
	if m != nil {
		return m.Albedo
	}
	return 0
}

func (m *PhysicalInfo) GetSurfacetemp() *SurfaceTemp {
	if m != nil {
		return m.Surfacetemp
	}
	return nil
}

func (m *PhysicalInfo) GetApparentmagnitude() *ApparentMagnitude {
	if m != nil {
		return m.Apparentmagnitude
	}
	return nil
}

type AtmosphereInfo struct {
	Surfacepressure      float32    `protobuf:"fixed32,1,opt,name=surfacepressure,proto3" json:"surfacepressure,omitempty"`
	Element              []*Element `protobuf:"bytes,2,rep,name=element,proto3" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AtmosphereInfo) Reset()         { *m = AtmosphereInfo{} }
func (m *AtmosphereInfo) String() string { return proto.CompactTextString(m) }
func (*AtmosphereInfo) ProtoMessage()    {}
func (*AtmosphereInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{3}
}

func (m *AtmosphereInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtmosphereInfo.Unmarshal(m, b)
}
func (m *AtmosphereInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtmosphereInfo.Marshal(b, m, deterministic)
}
func (m *AtmosphereInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtmosphereInfo.Merge(m, src)
}
func (m *AtmosphereInfo) XXX_Size() int {
	return xxx_messageInfo_AtmosphereInfo.Size(m)
}
func (m *AtmosphereInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AtmosphereInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AtmosphereInfo proto.InternalMessageInfo

func (m *AtmosphereInfo) GetSurfacepressure() float32 {
	if m != nil {
		return m.Surfacepressure
	}
	return 0
}

func (m *AtmosphereInfo) GetElement() []*Element {
	if m != nil {
		return m.Element
	}
	return nil
}

type Element struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Percentasdecimal     float32  `protobuf:"fixed32,2,opt,name=percentasdecimal,proto3" json:"percentasdecimal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Element) Reset()         { *m = Element{} }
func (m *Element) String() string { return proto.CompactTextString(m) }
func (*Element) ProtoMessage()    {}
func (*Element) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{4}
}

func (m *Element) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Element.Unmarshal(m, b)
}
func (m *Element) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Element.Marshal(b, m, deterministic)
}
func (m *Element) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Element.Merge(m, src)
}
func (m *Element) XXX_Size() int {
	return xxx_messageInfo_Element.Size(m)
}
func (m *Element) XXX_DiscardUnknown() {
	xxx_messageInfo_Element.DiscardUnknown(m)
}

var xxx_messageInfo_Element proto.InternalMessageInfo

func (m *Element) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Element) GetPercentasdecimal() float32 {
	if m != nil {
		return m.Percentasdecimal
	}
	return 0
}

type SurfaceTemp struct {
	Min                  uint32   `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  uint32   `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	Mean                 uint32   `protobuf:"varint,3,opt,name=mean,proto3" json:"mean,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SurfaceTemp) Reset()         { *m = SurfaceTemp{} }
func (m *SurfaceTemp) String() string { return proto.CompactTextString(m) }
func (*SurfaceTemp) ProtoMessage()    {}
func (*SurfaceTemp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{5}
}

func (m *SurfaceTemp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SurfaceTemp.Unmarshal(m, b)
}
func (m *SurfaceTemp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SurfaceTemp.Marshal(b, m, deterministic)
}
func (m *SurfaceTemp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SurfaceTemp.Merge(m, src)
}
func (m *SurfaceTemp) XXX_Size() int {
	return xxx_messageInfo_SurfaceTemp.Size(m)
}
func (m *SurfaceTemp) XXX_DiscardUnknown() {
	xxx_messageInfo_SurfaceTemp.DiscardUnknown(m)
}

var xxx_messageInfo_SurfaceTemp proto.InternalMessageInfo

func (m *SurfaceTemp) GetMin() uint32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *SurfaceTemp) GetMax() uint32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *SurfaceTemp) GetMean() uint32 {
	if m != nil {
		return m.Mean
	}
	return 0
}

type ApparentMagnitude struct {
	Min                  int32    `protobuf:"zigzag32,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  int32    `protobuf:"zigzag32,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApparentMagnitude) Reset()         { *m = ApparentMagnitude{} }
func (m *ApparentMagnitude) String() string { return proto.CompactTextString(m) }
func (*ApparentMagnitude) ProtoMessage()    {}
func (*ApparentMagnitude) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{6}
}

func (m *ApparentMagnitude) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApparentMagnitude.Unmarshal(m, b)
}
func (m *ApparentMagnitude) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApparentMagnitude.Marshal(b, m, deterministic)
}
func (m *ApparentMagnitude) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApparentMagnitude.Merge(m, src)
}
func (m *ApparentMagnitude) XXX_Size() int {
	return xxx_messageInfo_ApparentMagnitude.Size(m)
}
func (m *ApparentMagnitude) XXX_DiscardUnknown() {
	xxx_messageInfo_ApparentMagnitude.DiscardUnknown(m)
}

var xxx_messageInfo_ApparentMagnitude proto.InternalMessageInfo

func (m *ApparentMagnitude) GetMin() int32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *ApparentMagnitude) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type ReadPlanetRequest struct {
	PlanetId             string   `protobuf:"bytes,1,opt,name=planet_id,json=planetId,proto3" json:"planet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPlanetRequest) Reset()         { *m = ReadPlanetRequest{} }
func (m *ReadPlanetRequest) String() string { return proto.CompactTextString(m) }
func (*ReadPlanetRequest) ProtoMessage()    {}
func (*ReadPlanetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{7}
}

func (m *ReadPlanetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPlanetRequest.Unmarshal(m, b)
}
func (m *ReadPlanetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPlanetRequest.Marshal(b, m, deterministic)
}
func (m *ReadPlanetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPlanetRequest.Merge(m, src)
}
func (m *ReadPlanetRequest) XXX_Size() int {
	return xxx_messageInfo_ReadPlanetRequest.Size(m)
}
func (m *ReadPlanetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPlanetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPlanetRequest proto.InternalMessageInfo

func (m *ReadPlanetRequest) GetPlanetId() string {
	if m != nil {
		return m.PlanetId
	}
	return ""
}

type ReadPlanetResponse struct {
	Planet               *Planet  `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPlanetResponse) Reset()         { *m = ReadPlanetResponse{} }
func (m *ReadPlanetResponse) String() string { return proto.CompactTextString(m) }
func (*ReadPlanetResponse) ProtoMessage()    {}
func (*ReadPlanetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{8}
}

func (m *ReadPlanetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPlanetResponse.Unmarshal(m, b)
}
func (m *ReadPlanetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPlanetResponse.Marshal(b, m, deterministic)
}
func (m *ReadPlanetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPlanetResponse.Merge(m, src)
}
func (m *ReadPlanetResponse) XXX_Size() int {
	return xxx_messageInfo_ReadPlanetResponse.Size(m)
}
func (m *ReadPlanetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPlanetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPlanetResponse proto.InternalMessageInfo

func (m *ReadPlanetResponse) GetPlanet() *Planet {
	if m != nil {
		return m.Planet
	}
	return nil
}

type ListPlanetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPlanetRequest) Reset()         { *m = ListPlanetRequest{} }
func (m *ListPlanetRequest) String() string { return proto.CompactTextString(m) }
func (*ListPlanetRequest) ProtoMessage()    {}
func (*ListPlanetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{9}
}

func (m *ListPlanetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPlanetRequest.Unmarshal(m, b)
}
func (m *ListPlanetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPlanetRequest.Marshal(b, m, deterministic)
}
func (m *ListPlanetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPlanetRequest.Merge(m, src)
}
func (m *ListPlanetRequest) XXX_Size() int {
	return xxx_messageInfo_ListPlanetRequest.Size(m)
}
func (m *ListPlanetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPlanetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPlanetRequest proto.InternalMessageInfo

type ListPlanetResponse struct {
	Planet               []*Planet `protobuf:"bytes,1,rep,name=planet,proto3" json:"planet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListPlanetResponse) Reset()         { *m = ListPlanetResponse{} }
func (m *ListPlanetResponse) String() string { return proto.CompactTextString(m) }
func (*ListPlanetResponse) ProtoMessage()    {}
func (*ListPlanetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7ae48ba9b9a6fb, []int{10}
}

func (m *ListPlanetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPlanetResponse.Unmarshal(m, b)
}
func (m *ListPlanetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPlanetResponse.Marshal(b, m, deterministic)
}
func (m *ListPlanetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPlanetResponse.Merge(m, src)
}
func (m *ListPlanetResponse) XXX_Size() int {
	return xxx_messageInfo_ListPlanetResponse.Size(m)
}
func (m *ListPlanetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPlanetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPlanetResponse proto.InternalMessageInfo

func (m *ListPlanetResponse) GetPlanet() []*Planet {
	if m != nil {
		return m.Planet
	}
	return nil
}

func init() {
	proto.RegisterType((*Planet)(nil), "planet.Planet")
	proto.RegisterType((*OrbitalInfo)(nil), "planet.OrbitalInfo")
	proto.RegisterType((*PhysicalInfo)(nil), "planet.PhysicalInfo")
	proto.RegisterType((*AtmosphereInfo)(nil), "planet.AtmosphereInfo")
	proto.RegisterType((*Element)(nil), "planet.Element")
	proto.RegisterType((*SurfaceTemp)(nil), "planet.SurfaceTemp")
	proto.RegisterType((*ApparentMagnitude)(nil), "planet.ApparentMagnitude")
	proto.RegisterType((*ReadPlanetRequest)(nil), "planet.ReadPlanetRequest")
	proto.RegisterType((*ReadPlanetResponse)(nil), "planet.ReadPlanetResponse")
	proto.RegisterType((*ListPlanetRequest)(nil), "planet.ListPlanetRequest")
	proto.RegisterType((*ListPlanetResponse)(nil), "planet.ListPlanetResponse")
}

func init() {
	proto.RegisterFile("planet/planetpb/planet.proto", fileDescriptor_4e7ae48ba9b9a6fb)
}

var fileDescriptor_4e7ae48ba9b9a6fb = []byte{
	// 888 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x56, 0x51, 0x6f, 0x1b, 0x45,
	0x10, 0x96, 0xed, 0xe2, 0xc4, 0x73, 0x71, 0x12, 0x6f, 0xaa, 0x72, 0x84, 0x0a, 0x59, 0x27, 0x54,
	0x99, 0x3e, 0x14, 0x64, 0x04, 0x54, 0x08, 0x21, 0xb5, 0x55, 0x84, 0x22, 0x81, 0xa8, 0xae, 0x3c,
	0xf1, 0x82, 0x26, 0x77, 0x63, 0x7b, 0xd1, 0xde, 0xee, 0x75, 0x77, 0x6d, 0x25, 0xbf, 0x84, 0x9f,
	0x80, 0xc4, 0x13, 0x3f, 0xb1, 0xda, 0xb9, 0xb5, 0x7d, 0x8e, 0xe3, 0x3e, 0x79, 0xf7, 0x9b, 0x6f,
	0xbe, 0x99, 0xbd, 0x99, 0x9d, 0x35, 0x3c, 0xad, 0x15, 0x6a, 0xf2, 0x5f, 0x37, 0x3f, 0xf5, 0x4d,
	0x5c, 0xbc, 0xa8, 0xad, 0xf1, 0x46, 0xf4, 0x9b, 0x5d, 0xf6, 0x5f, 0x07, 0xfa, 0x6f, 0x79, 0x29,
	0x3e, 0x87, 0x41, 0x03, 0xfe, 0x25, 0xcb, 0xb4, 0x33, 0xee, 0x4c, 0x06, 0xf9, 0x71, 0x03, 0x5c,
	0x97, 0x42, 0xc0, 0x23, 0x8d, 0x15, 0xa5, 0x5d, 0xc6, 0x79, 0x2d, 0xbe, 0x83, 0xc4, 0xd8, 0x1b,
	0xe9, 0x51, 0x49, 0x3d, 0x33, 0x69, 0x6f, 0xdc, 0x99, 0x24, 0xd3, 0x8b, 0x17, 0x31, 0xce, 0xef,
	0x8d, 0xe9, 0x5a, 0xcf, 0x4c, 0xde, 0xe6, 0x89, 0x97, 0x70, 0x52, 0x2f, 0xee, 0x9c, 0x2c, 0xa2,
	0xdf, 0x23, 0xf6, 0x7b, 0xbc, 0xf6, 0x7b, 0x1b, 0x6d, 0xec, 0xb8, 0xc3, 0xcc, 0xfe, 0xed, 0x41,
	0xd2, 0x92, 0x15, 0x97, 0x70, 0x8c, 0xf5, 0x82, 0x94, 0x34, 0x9a, 0x13, 0xee, 0xe6, 0x9b, 0xbd,
	0xf8, 0x02, 0xa0, 0x26, 0x2b, 0xa3, 0xb5, 0xcb, 0xd6, 0x16, 0x22, 0xbe, 0x84, 0xa1, 0xa3, 0x4a,
	0x56, 0xf8, 0xb7, 0xb1, 0x78, 0x2b, 0x1d, 0xa7, 0xdf, 0xcd, 0x77, 0x41, 0x91, 0xc1, 0xc9, 0x55,
	0x51, 0x90, 0xf6, 0x56, 0x16, 0xd2, 0xdf, 0x71, 0xae, 0xdd, 0x7c, 0x07, 0x0b, 0x4a, 0xf1, 0x78,
	0x41, 0xde, 0x94, 0xe9, 0x27, 0x8d, 0xd2, 0x0e, 0xc8, 0xf1, 0xee, 0xb4, 0x29, 0x65, 0x11, 0x59,
	0xfd, 0x18, 0xaf, 0x0d, 0x8a, 0x09, 0x9c, 0xe1, 0x6a, 0x1e, 0x3d, 0x5d, 0x4d, 0x54, 0xa6, 0x47,
	0xcc, 0xbb, 0x0f, 0x8b, 0x31, 0x24, 0x15, 0xa1, 0x46, 0x6d, 0x2a, 0x54, 0x77, 0xe9, 0x31, 0xb3,
	0xda, 0x50, 0x60, 0x48, 0x5d, 0x28, 0xa9, 0xd1, 0x87, 0x4f, 0x30, 0x68, 0x18, 0x2d, 0x48, 0xfc,
	0x08, 0xa9, 0x32, 0x7a, 0x2e, 0xfd, 0xb2, 0x24, 0x33, 0x43, 0x57, 0x90, 0x2e, 0xa5, 0x9e, 0x6b,
	0x53, 0x52, 0x0a, 0x4c, 0x3f, 0x68, 0x17, 0x4f, 0x61, 0xe0, 0xd0, 0x93, 0x92, 0x9e, 0x5c, 0x9a,
	0x8c, 0x3b, 0x93, 0x61, 0xbe, 0x05, 0xb2, 0xff, 0xfb, 0x70, 0xd2, 0x2e, 0x64, 0x28, 0x47, 0xc8,
	0xcd, 0x62, 0x29, 0x97, 0x2e, 0x76, 0x57, 0x0b, 0x11, 0xcf, 0xe1, 0x9c, 0xde, 0x2f, 0xd1, 0x1b,
	0x2b, 0x51, 0x45, 0x56, 0xd3, 0x6b, 0x7b, 0x78, 0x38, 0x58, 0x6d, 0x14, 0xda, 0x48, 0xeb, 0x31,
	0xad, 0x0d, 0x85, 0x68, 0x33, 0x85, 0xde, 0x93, 0x96, 0x7a, 0xce, 0x45, 0x1b, 0xe4, 0x2d, 0x24,
	0x28, 0xb8, 0xa5, 0x9d, 0x61, 0x41, 0x68, 0x09, 0x63, 0xc1, 0xda, 0x90, 0x78, 0x02, 0xfd, 0x95,
	0x51, 0xcb, 0x8a, 0x62, 0x9d, 0xe2, 0x2e, 0xdc, 0x83, 0x0a, 0x9d, 0xe3, 0xaa, 0x74, 0x72, 0x5e,
	0xaf, 0x4b, 0x51, 0x92, 0x76, 0xa1, 0x47, 0x5a, 0xa5, 0x88, 0x90, 0x78, 0x06, 0xa7, 0x51, 0x7c,
	0x6e, 0x71, 0x15, 0x48, 0x4d, 0x35, 0xee, 0xa1, 0xe2, 0x7b, 0x78, 0x52, 0x99, 0x8a, 0xb4, 0x37,
	0x33, 0xa9, 0x3d, 0x59, 0x2f, 0x71, 0x86, 0x85, 0x37, 0x96, 0xcb, 0x31, 0xc8, 0x0f, 0x58, 0x83,
	0x3e, 0xb9, 0x02, 0x6b, 0x5a, 0x91, 0x32, 0xdc, 0xa8, 0x49, 0xa3, 0xbf, 0x8b, 0x06, 0x7d, 0x27,
	0x4b, 0xb2, 0x84, 0xca, 0x1a, 0xcf, 0x4d, 0x10, 0xbb, 0xf1, 0x84, 0xf9, 0x07, 0xac, 0xe2, 0x67,
	0xb8, 0x6c, 0x55, 0x21, 0xda, 0x36, 0xb1, 0x86, 0xec, 0xfb, 0x11, 0x46, 0x68, 0x16, 0xbc, 0x95,
	0xa8, 0xbc, 0x54, 0x3e, 0x3d, 0x65, 0xfa, 0x16, 0x10, 0x2f, 0xe1, 0x53, 0x6d, 0xac, 0x5f, 0xd4,
	0x46, 0x91, 0x95, 0xf3, 0x85, 0xe7, 0x4e, 0x73, 0xa1, 0x69, 0xcf, 0x98, 0x7b, 0xc8, 0x2c, 0xa6,
	0xf0, 0x78, 0x63, 0x2a, 0x69, 0xdb, 0xeb, 0xe7, 0xec, 0xf6, 0xa0, 0x2d, 0x54, 0x16, 0xd5, 0x0d,
	0x95, 0x26, 0x1d, 0x35, 0x95, 0x6d, 0x76, 0x61, 0x9a, 0xc5, 0x6a, 0x78, 0xaa, 0xea, 0x54, 0xec,
	0x4e, 0xb3, 0x77, 0x8d, 0xe9, 0x0f, 0xaa, 0xea, 0xbc, 0xcd, 0x13, 0xbf, 0xc0, 0x08, 0xeb, 0x1a,
	0x2d, 0x69, 0x5f, 0xe1, 0x5c, 0xf3, 0x5d, 0x49, 0x2f, 0xd8, 0xf9, 0xb3, 0xb5, 0xf3, 0xab, 0x48,
	0xf8, 0x6d, 0x4d, 0xc8, 0xf7, 0x7d, 0x32, 0x82, 0xd3, 0x57, 0xbe, 0x32, 0xae, 0x5e, 0x90, 0x25,
	0xbe, 0x33, 0x13, 0x38, 0x8b, 0x91, 0x6a, 0x4b, 0xce, 0x2d, 0x2d, 0xc5, 0x29, 0x77, 0x1f, 0x16,
	0x5f, 0xc1, 0x11, 0x29, 0x0a, 0xad, 0x91, 0x76, 0xc7, 0xbd, 0x49, 0x32, 0x3d, 0x5b, 0x87, 0xbe,
	0x6a, 0xe0, 0x7c, 0x6d, 0xcf, 0xae, 0xe1, 0x28, 0x62, 0x9b, 0x99, 0xde, 0x69, 0xcd, 0xf4, 0xe7,
	0x70, 0x5e, 0x93, 0x0d, 0xd3, 0x0d, 0x5d, 0x49, 0x85, 0xac, 0x50, 0xc5, 0xe1, 0xb9, 0x87, 0x67,
	0x57, 0x90, 0xb4, 0x3e, 0x8b, 0x38, 0x87, 0x5e, 0x25, 0x9b, 0x41, 0x3c, 0xcc, 0xc3, 0x92, 0x11,
	0xbc, 0x65, 0xff, 0x80, 0xe0, 0x2d, 0x5f, 0x1f, 0x42, 0xcd, 0x77, 0x76, 0x98, 0xf3, 0x3a, 0xfb,
	0x01, 0x46, 0x7b, 0x1f, 0xa8, 0x2d, 0x36, 0xda, 0x13, 0x1b, 0xb1, 0x58, 0xf6, 0x0d, 0x8c, 0x72,
	0xc2, 0xb2, 0x79, 0xbe, 0x72, 0x7a, 0xbf, 0x24, 0xf7, 0xf1, 0x57, 0x2c, 0xfb, 0x09, 0x44, 0xdb,
	0xc3, 0xd5, 0x46, 0x3b, 0x12, 0xcf, 0x20, 0xbe, 0x86, 0xcc, 0x4f, 0xa6, 0xa7, 0x9b, 0xa7, 0xa8,
	0xe1, 0xad, 0xdf, 0xca, 0x0b, 0x18, 0xfd, 0x2a, 0x9d, 0xdf, 0x89, 0x17, 0x24, 0xdb, 0xe0, 0x03,
	0x92, 0xbd, 0xc3, 0x92, 0xd3, 0x7f, 0x3a, 0x90, 0xbc, 0x56, 0x66, 0xfe, 0x8e, 0xec, 0x4a, 0x16,
	0x24, 0xde, 0x00, 0x6c, 0x13, 0x14, 0x9b, 0x06, 0xda, 0x3b, 0xe6, 0xe5, 0xe5, 0x43, 0xa6, 0x18,
	0xfc, 0x0d, 0xc0, 0x36, 0xa5, 0xad, 0xc8, 0x5e, 0xee, 0x5b, 0x91, 0xfd, 0x13, 0xbc, 0x86, 0x3f,
	0x8f, 0xd7, 0xff, 0x1c, 0x6e, 0xfa, 0xfc, 0x9f, 0xe1, 0xdb, 0x0f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xe9, 0x21, 0x34, 0xc0, 0x53, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlogServiceClient is the client API for BlogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlogServiceClient interface {
	ReadPlanet(ctx context.Context, in *ReadPlanetRequest, opts ...grpc.CallOption) (*ReadPlanetResponse, error)
	ListPlanet(ctx context.Context, in *ListPlanetRequest, opts ...grpc.CallOption) (*ListPlanetResponse, error)
}

type blogServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlogServiceClient(cc grpc.ClientConnInterface) BlogServiceClient {
	return &blogServiceClient{cc}
}

func (c *blogServiceClient) ReadPlanet(ctx context.Context, in *ReadPlanetRequest, opts ...grpc.CallOption) (*ReadPlanetResponse, error) {
	out := new(ReadPlanetResponse)
	err := c.cc.Invoke(ctx, "/planet.BlogService/ReadPlanet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) ListPlanet(ctx context.Context, in *ListPlanetRequest, opts ...grpc.CallOption) (*ListPlanetResponse, error) {
	out := new(ListPlanetResponse)
	err := c.cc.Invoke(ctx, "/planet.BlogService/ListPlanet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlogServiceServer is the server API for BlogService service.
type BlogServiceServer interface {
	ReadPlanet(context.Context, *ReadPlanetRequest) (*ReadPlanetResponse, error)
	ListPlanet(context.Context, *ListPlanetRequest) (*ListPlanetResponse, error)
}

// UnimplementedBlogServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBlogServiceServer struct {
}

func (*UnimplementedBlogServiceServer) ReadPlanet(ctx context.Context, req *ReadPlanetRequest) (*ReadPlanetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadPlanet not implemented")
}
func (*UnimplementedBlogServiceServer) ListPlanet(ctx context.Context, req *ListPlanetRequest) (*ListPlanetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPlanet not implemented")
}

func RegisterBlogServiceServer(s *grpc.Server, srv BlogServiceServer) {
	s.RegisterService(&_BlogService_serviceDesc, srv)
}

func _BlogService_ReadPlanet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadPlanetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).ReadPlanet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planet.BlogService/ReadPlanet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).ReadPlanet(ctx, req.(*ReadPlanetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_ListPlanet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPlanetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).ListPlanet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planet.BlogService/ListPlanet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).ListPlanet(ctx, req.(*ListPlanetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "planet.BlogService",
	HandlerType: (*BlogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadPlanet",
			Handler:    _BlogService_ReadPlanet_Handler,
		},
		{
			MethodName: "ListPlanet",
			Handler:    _BlogService_ListPlanet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "planet/planetpb/planet.proto",
}
